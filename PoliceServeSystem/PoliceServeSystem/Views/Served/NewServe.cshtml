@model PoliceServeSystem.ViewModels.ServedStatusDetail
@{
    ViewBag.Title = "Officer Served System";

    var listItemsIsServed = new List<SelectListItem>
    {
        new SelectListItem
        {
            Text = "-Select-",
            Value = "-Select-",
            Selected = true
        },
        new SelectListItem
        {
            Text = "Yes",
            Value = "Yes"
        },
        new SelectListItem
        {
            Text = "No",
            Value = "No"
        }
    };
    var listItemsResult = new List<SelectListItem>
    {
        new SelectListItem
        {
            Text = "-Select-",
            Value = "-Select-",
            Selected = true
        },
        new SelectListItem
        {
            Text = "Moved",
            Value = "Moved"
        },
        new SelectListItem
        {
            Text = "Run away",
            Value = "Run away"
        },
        new SelectListItem
        {
            Text = "Not home",
            Value = "Not home"
        },
        new SelectListItem
        {
            Text = "Other",
            Value = "Otherr"
        }
    };
}
<link href="~/Content/css/jquery.signaturepad.css" rel="stylesheet" type="text/css" />

<div>
    <div class="row">
        <h3>Serve Status</h3>
    </div>
    <form class="sigPad" name="input" action="@Url.Action("NewServe", "Served")" method="post">
        <div class="row">
            <div class="form-group">
                <label>WarrantNo</label>
                @Html.TextBoxFor(m => m.WarrantNo)
                <label>Serve Attempt#</label>
                @Html.TextBoxFor(m => m.ServedTimes, new {disabled = "disabled", style = "width: 50px"})
                <label>Result</label>
                @Html.DropDownListFor(m => m.Result, listItemsResult)
                <label>Served</label>
                @Html.DropDownListFor(m => m.IsServed, listItemsIsServed)
                <label>Served By</label>
                @Html.TextBoxFor(m => m.ServedBy)
                <label>Comments</label>
                @Html.TextAreaFor(m => m.Comments)
            </div>
        </div>
        <div class="row">
            <div class="form-group">
                <label>Accused Sign</label>
                <div class="modal-body">
                    <canvas class="pad" width="500" height="200" id="signCanvas" style="border: 1px solid grey;"></canvas>
                    <input type="hidden" name="SignatureValue" class="output" id="signHdn0">
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-2">
                <div class="form-horizontal">
                    <input id="btnClear" type="button" value="Clear" class="btn btn-info"/>
                    <input type="submit" value="Save" class="btn btn-success"/>
                </div>
            </div>
        </div>
    </form>
    <div>
        @Html.ActionLink("Log Off", "Login", "Account")
    </div>
</div>
@section scripts{
    <script src="~/Content/assets/plugins/jquery-1.10.2.min.js"></script>
    <script src="~/Content/js/jquery.signaturepad.js"></script>
    <script src="~/Content/js/json2.js"></script>

    <script>
        var sign;
        $(document)
            .ready(function() {
                sign = $('.sigPad')
                    .signaturePad({
                        drawOnly: true,
                        penColour: 'black'
                    });
            });

        $('#btnClear')
            .click(function() {

                sign.clearCanvas();
            });
    </script>
}


